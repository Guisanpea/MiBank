-- MySQL Script generated by MySQL Workbench
-- dom 06 may 2018 19:06:38 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema MiBankDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `MiBankDB`;

-- -----------------------------------------------------
-- Schema MiBankDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MiBankDB`
  DEFAULT CHARACTER SET utf8;
USE `MiBankDB`;

-- -----------------------------------------------------
-- Table `MiBankDB`.`Employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MiBankDB`.`Employee`;

CREATE TABLE IF NOT EXISTS `MiBankDB`.`Employee` (
  `id`        INT         NOT NULL,
  `user_name` VARCHAR(45) NULL,
  `password`  VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `MiBankDB`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MiBankDB`.`User`;

CREATE TABLE IF NOT EXISTS `MiBankDB`.`User` (
  `dni`          VARCHAR(9)   NOT NULL,
  `password`     VARCHAR(128) NOT NULL,
  `name`         VARCHAR(45)  NOT NULL,
  `surname`      VARCHAR(45)  NOT NULL,
  `address`      VARCHAR(45)  NOT NULL,
  `email`        VARCHAR(45)  NOT NULL,
  `phone`        INT          NOT NULL,
  `phone_prefix` VARCHAR(5)   NOT NULL,
  `created_at`   TIMESTAMP    NOT NULL DEFAULT current_timestamp,
  `updated_at`   TIMESTAMP    NOT NULL DEFAULT current_timestamp ON UPDATE current_timestamp,
  UNIQUE INDEX `DNI_UNIQUE` (`dni` ASC),
  PRIMARY KEY (`dni`)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `MiBankDB`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MiBankDB`.`Account`;

CREATE TABLE IF NOT EXISTS `MiBankDB`.`Account` (
  `bank`       INT(4)     NOT NULL  DEFAULT 0001,
  `office`     INT(4)     NOT NULL  DEFAULT 0001,
  `control`    INT(2)     NOT NULL  DEFAULT 00,
  `id`         INT(10)    NOT NULL,
  `currency`   VARCHAR(3) NOT NULL,
  `created_at` TIMESTAMP  NOT NULL  DEFAULT current_timestamp,
  `user_dni`   VARCHAR(9) NOT NULL,
  PRIMARY KEY (`bank`, `office`, `control`, `id`),
  INDEX `fk_Account_User1_idx` (`user_dni` ASC),
  CONSTRAINT `fk_Account_User1`
  FOREIGN KEY (`user_dni`)
  REFERENCES `MiBankDB`.`User` (`dni`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;
DELIMITER $$

CREATE TRIGGER `auto_increment_account`
  BEFORE INSERT
  ON `MiBankDB`.`Account`
  FOR EACH ROW
  BEGIN
    SET NEW.id = (
      SELECT IFNULL(MAX(id), 0) + 1
      FROM `Account`
      WHERE bank = NEW.bank
            AND office = NEW.office
    );
  END $$

DELIMITER ;
-- -----------------------------------------------------
-- Table `MiBankDB`.`Transfer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MiBankDB`.`Transfer`;

CREATE TABLE IF NOT EXISTS `MiBankDB`.`Transfer` (
  `id`                   INT         NOT NULL,
  `account_from`         VARCHAR(24) NULL,
  `amount`               DECIMAL     NOT NULL,
  `description`          VARCHAR(45) NULL,
  `employee_involved`    INT         NULL,
  `account_bank`         INT(4)      NOT NULL,
  `account_office`       INT(4)      NOT NULL,
  `account_control`      INT(2)      NOT NULL,
  `account_id`           INT(10)     NOT NULL,
  `from_account_bank`    INT(4)      NULL,
  `from_account_office`  INT(4)      NULL,
  `from_account_control` INT(2)      NULL,
  `from_account_id`      INT(10)     NULL,
  `created_at`           TIMESTAMP   NULL DEFAULT current_timestamp,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_Transfer_Employee1_idx` (`employee_involved` ASC),
  INDEX `description_idx` (`description` ASC),
  INDEX `fk_Transfer_Account1_idx` (`account_bank` ASC, `account_office` ASC, `account_control` ASC, `account_id` ASC),
  INDEX `fk_Transfer_Account2_idx` (`from_account_bank` ASC, `from_account_office` ASC, `from_account_control` ASC, `from_account_id` ASC),
  CONSTRAINT `fk_Transfer_Employee1`
  FOREIGN KEY (`employee_involved`)
  REFERENCES `MiBankDB`.`Employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transfer_Account1`
  FOREIGN KEY (`account_bank`, `account_office`, `account_control`, `account_id`)
  REFERENCES `MiBankDB`.`Account` (`bank`, `office`, `control`, `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transfer_Account2`
  FOREIGN KEY (`from_account_bank`, `from_account_office`, `from_account_control`, `from_account_id`)
  REFERENCES `MiBankDB`.`Account` (`bank`, `office`, `control`, `id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;

